server:
  port: 8090

spring:
  application:
    name: autenticacion-service
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/autenticacion
    username: postgres
    password: 1324
  sql:
    init:
      mode: always
      schema-locations: classpath:schema.sql
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null

management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true

jwt:
  secret: ${JWT_SECRET:mySecretKeyForGeneratingJWTtokensItShouldBeVerySecureAndAtLeast256BitsLong}
  expiration: 7200  # Token expiration time in seconds (2 hours)
  issuer: https://autentication-service:8090/issuer
  client-id: autentication-client

oauth2:
  clients:
    - client-id: web-client
      client-secret: web-client-secret
      grant-types: authorization_code,refresh_token
      redirect-uris: http://localhost:8080/login/oauth2/code/custom,http://localhost:4200/callback
    - client-id: gateway-client
      client-secret: gateway-client-secret
      grant-types: client_credentials
      scopes: read,write
      
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"

adapters:
  r2dbc:
    host: localhost
    port: 5432
    database: autenticacion
    username: postgres
    password: 1324

springdoc:
  swagger-ui:
    urls:
      - name: users
        url: /openapi/users-api.yaml
